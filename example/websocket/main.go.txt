package main

import (
	"log/slog"
	"net/http"
	"time"

	"github.com/duomi520/whttp"
	"github.com/go-playground/validator"

	"github.com/gorilla/websocket"
)

var upgrader = websocket.Upgrader{}

func echo(ctx *whttp.HTTPContext) {
	c, err := upgrader.Upgrade(ctx.Writer, ctx.Request, nil)
	if err != nil {
		slog.Error("upgrade:", err)
		return
	}
	defer c.Close()
	for {
		mt, message, err := c.ReadMessage()
		if err != nil {
			slog.Error("read:", err)
			break
		}
		slog.Info("recv:" + string(message))
		err = c.WriteMessage(mt, message)
		if err != nil {
			slog.Error("write:", err)
			break
		}
	}
}

func main() {
	r := whttp.NewRoute(validator.New(), nil)
	r.Static("/", "index.html")
	r.GET("/echo", echo)
	//启动服务
	srv := &http.Server{
		Handler:        r.Mux,
		ReadTimeout:    3600 * time.Second,
		WriteTimeout:   3600 * time.Second,
		MaxHeaderBytes: 1 << 20,
	}
	if err := srv.ListenAndServe(); err != nil && err != http.ErrServerClosed {
		slog.Error(err.Error())
	}
}
